name: Publish

on:
  push:
    branches:
      - main

jobs:
  secrets:
    name: Secrets
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run secrets scan
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
        uses: GitGuardian/ggshield-action@master
        with:
          args: --verbose --all-policies

  security:
    name: Security
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Horusec
        run: curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
      - name: Run analysis
        run: |
          horusec start \
            --enable-commit-author="true" \
            --enable-git-history="true" \
            --enable-owasp-dependency-check="true" \
            --enable-shellcheck="true" \
            --information-severity="true" \
            --project-path="./" \
            --return-error="true" \
            --output-format="json" \
            --json-output-file="horusec.json"
      - name: Import report into DefectDojo
        run: |
          curl --request POST \
            --header 'Accept: application/json' \
            --header 'Content-Type: application/json' \
            --header 'X-Api-Key: ${{ secrets.INTEGRATION_DEFECTDOJO }}' \
            --data "$(cat horusec.json)" \
            "https://api.appsec.orangestack.com/report?tool=horusec&env=${{ github.event.repository.default_branch }}&repo=${{ github.repository }}"
        continue-on-error: true

  mirror:
    name: Mirror
    needs: [secrets, security]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout private repository
        run: git clone --branch main "https://${{ secrets.GIT_PIPE_TOKEN }}@github.com/${{ github.repository }}" ./private-repository
      - name: Checkout public repository
        run: git clone --branch main "https://${{ secrets.GIT_PIPE_TOKEN }}@github.com/${{ github.repository_owner }}/web-nextjs" ./public-repository
      - name: Update public repository
        run: |
          cd ./public-repository
          rm --recursive --force $(ls --almost-all | grep --invert-match '^.git$')
          cd ..
          rm --recursive --force ./private-repository/.git
          cp --recursive --force ./private-repository/. ./public-repository
      - name: Remove .github folder
        run: rm --recursive --force .github
        working-directory: ./public-repository        
      - name: Set up git user
        run: |
          git config user.name 'StackSpot Admin'
          git config user.email admin@stackspot.com
        working-directory: ./public-repository
      - name: Commit
        run: |
          git add .
          git commit --message 'Update public repository'
        working-directory: ./public-repository
        continue-on-error: true
      - name: Push
        run: git push origin main
        working-directory: ./public-repository